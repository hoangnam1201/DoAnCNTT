{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router-dom';\nimport routeConfig from './routesBreadcrumbs.json';\nexport { routeConfig };\n\nconst useBreadcrumbs = routeConfig => {\n  _s();\n\n  var paths = [];\n  const route = useLocation().pathname;\n  const name = routeConfig;\n  var position = 1;\n\n  while (position !== -1) {\n    paths.push(route.slice(0, position));\n    position = route.indexOf('/', position + 1);\n    if (position === -1 && route !== \"/\") paths.push(route);\n  }\n\n  paths = paths.map(route => {\n    const breadcrumb = name.find(breadcrumb => breadcrumb.path === route);\n    if (breadcrumb !== undefined) return breadcrumb;else {\n      const routeName = route.slice(route.lastIndexOf('/') + 1);\n      return {\n        path: route,\n        name: routeName\n      };\n    }\n  });\n  return paths;\n};\n\n_s(useBreadcrumbs, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nexport default useBreadcrumbs;","map":{"version":3,"sources":["E:/Hoc Tap/Do an CNTT/git/DoAnCNTT/frontend/src/hooks/useBreadcrumbs.js"],"names":["useLocation","routeConfig","useBreadcrumbs","paths","route","pathname","name","position","push","slice","indexOf","map","breadcrumb","find","path","undefined","routeName","lastIndexOf"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,SAASA,WAAT;;AAEA,MAAMC,cAAc,GAAID,WAAD,IAAiB;AAAA;;AACpC,MAAIE,KAAK,GAAG,EAAZ;AACA,QAAMC,KAAK,GAAGJ,WAAW,GAAGK,QAA5B;AACA,QAAMC,IAAI,GAAGL,WAAb;AACA,MAAIM,QAAQ,GAAG,CAAf;;AACA,SAAOA,QAAQ,KAAK,CAAC,CAArB,EAAwB;AACpBJ,IAAAA,KAAK,CAACK,IAAN,CAAWJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeF,QAAf,CAAX;AACAA,IAAAA,QAAQ,GAAGH,KAAK,CAACM,OAAN,CAAc,GAAd,EAAmBH,QAAQ,GAAG,CAA9B,CAAX;AACA,QAAIA,QAAQ,KAAK,CAAC,CAAd,IAAmBH,KAAK,KAAK,GAAjC,EACID,KAAK,CAACK,IAAN,CAAWJ,KAAX;AACP;;AACDD,EAAAA,KAAK,GAAGA,KAAK,CAACQ,GAAN,CAAUP,KAAK,IAAI;AACvB,UAAMQ,UAAU,GAAGN,IAAI,CAACO,IAAL,CAAUD,UAAU,IAAIA,UAAU,CAACE,IAAX,KAAoBV,KAA5C,CAAnB;AACA,QAAIQ,UAAU,KAAKG,SAAnB,EACI,OAAOH,UAAP,CADJ,KAEK;AACD,YAAMI,SAAS,GAAGZ,KAAK,CAACK,KAAN,CAAYL,KAAK,CAACa,WAAN,CAAkB,GAAlB,IAAyB,CAArC,CAAlB;AACA,aAAO;AACHH,QAAAA,IAAI,EAAEV,KADH;AAEHE,QAAAA,IAAI,EAAEU;AAFH,OAAP;AAIH;AACJ,GAXO,CAAR;AAYA,SAAOb,KAAP;AACH,CAxBD;;GAAMD,c;UAEYF,W;;;AAwBlB,eAAeE,cAAf","sourcesContent":["import { useLocation } from 'react-router-dom'\r\nimport routeConfig from './routesBreadcrumbs.json'\r\n\r\nexport { routeConfig }\r\n\r\nconst useBreadcrumbs = (routeConfig) => {\r\n    var paths = []\r\n    const route = useLocation().pathname\r\n    const name = routeConfig\r\n    var position = 1;\r\n    while (position !== -1) {\r\n        paths.push(route.slice(0, position))\r\n        position = route.indexOf('/', position + 1)\r\n        if (position === -1 && route !== \"/\")\r\n            paths.push(route)\r\n    }\r\n    paths = paths.map(route => {\r\n        const breadcrumb = name.find(breadcrumb => breadcrumb.path === route)\r\n        if (breadcrumb !== undefined)\r\n            return breadcrumb\r\n        else {\r\n            const routeName = route.slice(route.lastIndexOf('/') + 1)\r\n            return {\r\n                path: route,\r\n                name: routeName\r\n            }\r\n        }\r\n    })\r\n    return paths\r\n}\r\n\r\nexport default useBreadcrumbs"]},"metadata":{},"sourceType":"module"}